import pytest
from click.testing import CliRunner
from pizza import Margherita, Pepperoni, Hawaiian
from cli import cli


def test_menu_output():
    """
    –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≤—ã–≤–æ–¥ –º–µ–Ω—é
    """
    runner = CliRunner()
    result = runner.invoke(cli, ['menu'])

    assert '–ú–µ–Ω—é:' in result.output
    assert 'Margherita üßÄ: ' in result.output
    assert 'Pepperoni üçï: ' in result.output
    assert 'Hawaiian üçç: ' in result.output
    assert '–î–æ—Å—Ç—É–ø–Ω—ã–µ —Ä–∞–∑–º–µ—Ä—ã' in result.output


def test_wrong_size():
    """
    –ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Å–ª—É—á–∞–π, –µ—Å–ª–∏ —Ä–∞–∑–º–µ—Ä–∞ –Ω–µ—Ç –≤ —Å–ø–∏—Å–∫–µ —Ä–∞–∑–º–µ—Ä–æ–≤.
    """
    runner = CliRunner()
    result = runner.invoke(cli, ['order', 'pepperoni', 's'])

    assert '–¢–∞–∫–æ–≥–æ —Ä–∞–∑–º–µ—Ä–∞ –Ω–µ—Ç:(' in result.output


def test_wrong_pizza():
    """
    –ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Å–ª—É—á–∞–π, –µ—Å–ª–∏ –∑–∞–∫–∞–∑—ã–≤–∞—é—Ç –ø–∏—Ü—Ü—É, –∫–æ—Ç–æ—Ä–æ–π –Ω–µ—Ç –≤ –º–µ–Ω—é.
    """
    runner = CliRunner()
    result = runner.invoke(cli, ['order', 'diavola', 'l'])

    assert '–ú—ã –ø–æ–∫–∞ –µ—â–µ –Ω–µ —É–º–µ–µ–º –≥–æ—Ç–æ–≤–∏—Ç—å —Ç–∞–∫—É—é –ø–∏—Ü—Ü—É :(' in result.output


def test_no_size():
    """
    –ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Å–ª—É—á–∞–π, –µ—Å–ª–∏ –≤ –∑–∞–∫–∞–∑–µ —Ä–∞–∑–º–µ—Ä –Ω–µ —É–∫–∞–∑–∞–Ω.
    """
    runner = CliRunner()
    result = runner.invoke(cli, ['order', 'margherita'])

    assert result.exit_code != 0
    assert 'Missing argument' in result.output


def test_no_pizza():
    """
    –ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Å–ª—É—á–∞–π, –µ—Å–ª–∏ –≤ –∑–∞–∫–∞–∑–µ –Ω–µ —É–∫–∞–∑–∞–Ω–∞ –ø–∏—Ü—Ü–∞.
    """
    runner = CliRunner()
    result = runner.invoke(cli, ['order'])

    assert result.exit_code != 0
    assert 'Missing argument' in result.output


def test_order():
    """
    –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≤—ã–≤–æ–¥ –∑–∞–∫–∞–∑–∞ –±–µ–∑ —Ñ–ª–∞–≥–æ–≤.
    """
    runner = CliRunner()
    result = runner.invoke(cli, ['order', 'margherita', 'xl'])

    assert '–ü—Ä–∏–≥–æ—Ç–æ–≤–∏–ª–∏ –∑–∞' in result.output
    assert '–í–∞—à–∞ –ø–∏—Ü—Ü–∞ –≥–æ—Ç–æ–≤–∞!' in result.output


def test_order_delivery():
    """
    –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≤—ã–≤–æ–¥ –∑–∞–∫–∞–∑–∞ —Å —Ñ–ª–∞–≥–æ–º –¥–æ—Å—Ç–∞–≤–∫–∏.
    """
    runner = CliRunner()
    result = runner.invoke(cli, ['order', 'margherita', 'xl', '--delivery'])

    assert '–ü—Ä–∏–≥–æ—Ç–æ–≤–∏–ª–∏ –∑–∞' in result.output
    assert '–î–æ—Å—Ç–∞–≤–∏–ª–∏ –∑–∞' in result.output
    assert '–ó–∞–∫–∞–∑ –¥–æ—Å—Ç–∞–≤–ª–µ–Ω!' in result.output


def test_order_takeout():
    """
    –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≤—ã–≤–æ–¥ –∑–∞–∫–∞–∑–∞ —Å —Ñ–ª–∞–≥–æ–º —Å–∞–º–æ–≤—ã–≤–æ–∑–∞.
    """
    runner = CliRunner()
    result = runner.invoke(cli, ['order', 'margherita', 'xl', '--takeout'])

    assert '–ü—Ä–∏–≥–æ—Ç–æ–≤–∏–ª–∏ –∑–∞' in result.output
    assert '–ó–∞–±—Ä–∞–ª–∏ –∑–∞' in result.output
    assert '–°–ø–∞—Å–∏–±–æ, —á—Ç–æ –ø–æ–ª—å–∑—É–µ—Ç–µ—Å—å —Å–∞–º–æ–≤—ã–≤–æ–∑–æ–º!' in result.output


def test_margherita_dict():
    """
    –¢–µ—Å—Ç–∏—Ä—É–µ—Ç –≤—ã–≤–æ–¥ —Ä–µ—Ü–µ–ø—Ç –ú–∞—Ä–≥–∞—Ä–∏—Ç—ã.
    """
    margherita = Margherita('L')
    assert margherita.__dict__() == {
        'size': 'L',
        'ingredients': ['tomato sauce', 'mozzarella', 'tomatoes']
    }


def test_pepperoni_dict():
    """
    –¢–µ—Å—Ç–∏—Ä—É–µ—Ç –≤—ã–≤–æ–¥ —Ä–µ—Ü–µ–ø—Ç –ü–µ–ø–ø–µ—Ä–æ–Ω–∏.
    """
    pepperoni = Pepperoni('L')
    assert pepperoni.__dict__() == {
        'size': 'L',
        'ingredients': ['tomato sauce', 'mozzarella', 'pepperoni']
    }


def test_hawaiian_dict():
    """
    –¢–µ—Å—Ç–∏—Ä—É–µ—Ç –≤—ã–≤–æ–¥ —Ä–µ—Ü–µ–ø—Ç –ì–∞–≤–∞–π—Å–∫–æ–π –ø–∏—Ü—Ü—ã.
    """
    hawaiian = Hawaiian('XL')
    assert hawaiian.__dict__() == {
        'size': 'XL',
        'ingredients': ['tomato sauce', 'mozzarella', 'chicken', 'pineapples']
    }


def test_eq_true():
    """
    –¢–µ—Å—Ç–∏—Ä—É–µ—Ç —Å—Ä–∞–≤–Ω–µ–Ω–∏–µ –ø–∏—Ü—Ü—ã –≤ —Å–ª—É—á–∞–µ, –µ—Å–ª–∏ –æ–Ω–∏ –æ–¥–∏–Ω–∞–∫–æ–≤—ã–µ.
    """
    margherita = Margherita('XL')
    assert margherita.__eq__(Margherita('XL')) is True


def test_eq_false():
    """
    –¢–µ—Å—Ç–∏—Ä—É–µ—Ç —Å—Ä–∞–≤–Ω–µ–Ω–∏–µ –ø–∏—Ü—Ü—ã –≤ —Å–ª—É—á–∞–µ, –µ—Å–ª–∏ –æ–Ω–∏ —Ä–∞–∑–Ω—ã–µ.
    """
    margherita = Margherita('XL')
    assert margherita.__eq__(Pepperoni('XL')) is False


def test_eq_wrong_type():
    """
    –°—Ä–∞–≤–Ω–∏–≤–∞–µ—Ç –ø–∏—Ü—Ü—ã –≤ —Å–ª—É—á–∞–µ, –µ—Å–ª–∏ —Ç–∏–ø –ø–∏—Ü—Ü—ã
    –Ω–µ —Ç–æ—Ç, –∫–æ—Ç–æ—Ä—ã–π –æ–∂–∏–¥–∞–ª—Å—è.
    """
    with pytest.raises(ValueError):
        margherita = Margherita('XL')
        margherita.__eq__('pepperoni')
